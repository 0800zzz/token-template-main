---
// index.astro - Versión Cyberpunk Mejorada
import { getCollection } from "astro:content";
import Hero from "@/components/Hero.astro";
import Section from "@/components/Section.astro";
import BlogPostCard from "@/components/BlogPostCard.astro";
import Layout from "@/layouts/Layout.astro";
import { KNOWN_TECH, ABOUT_ME } from "@/consts";
import Terminal from "@/components/Terminal.astro";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!-- Efecto Matrix Rain de fondo -->
<div id="matrix-rain" class="fixed top-0 left-0 w-full h-full -z-10 opacity-10"></div>

<script is:inline>
  // Animación Matrix Rain (código previo se mantiene igual)
</script>

<Layout title="MARTINAL | Red Team Specialist" theme="cyberpunk">
  <Hero cyberpunk>
    <h1 class="glitch text-5xl md:text-6xl font-bold mb-4" data-text="MARTINAL">
      <span>MARTINAL</span>
    </h1>
    <div id="typing-effect" class="text-green-400 font-mono text-xl md:text-2xl"></div>
  </Hero>


  <!-- Efecto Typing para el Hero -->
  <script is:inline>
    // Typing Effect
    document.addEventListener('DOMContentLoaded', () => {
      const phrases = [
        "root@portfolio:~# whoami",
        "Pentester | Red Team Specialist",
        "TOP 70% CONTENT",
        "Ethical Hacker | Security Researcher"
      ];
      let i = 0, j = 0, currentPhrase = [], isDeleting = false;
      const element = document.getElementById('typing-effect');
      
      function type() {
        if (i < phrases.length) {
          if (!isDeleting && j <= phrases[i].length) {
            currentPhrase.push(phrases[i][j]);
            j++;
            element.innerHTML = currentPhrase.join('') + '<span class="blink">█</span>';
          }
          
          if (isDeleting && j >= 0) {
            currentPhrase.pop();
            j--;
            element.innerHTML = currentPhrase.join('') + '<span class="blink">█</span>';
          }
          
          if (j === phrases[i].length) {
            isDeleting = true;
            setTimeout(type, 2000);
          } else if (isDeleting && j === 0) {
            currentPhrase = [];
            isDeleting = false;
            i++;
            if (i === phrases.length) i = 0;
            setTimeout(type, 500);
          } else {
            setTimeout(type, isDeleting ? 30 : 100);
          }
        }
      }
      type();
    });
  </script>
  
  <!-- Terminal Cyberpunk con efecto de escaneo -->
  <Section 
    title="/usr/bin/whoami" 
    className="bg-black/90 border border-green-400/50 glow-effect py-12 scanline-section"
  >
    <Terminal hackerMode />
    <div class="scanline-overlay"></div>
  </Section>

  <!-- Sección de Blog Posts con efecto hover -->
  <Section
    title="cat /var/log/blog/posts"
    className="bg-black/80 border-t border-b border-green-400/20"
  >
    <div class="w-full grid grid-cols-1 md:grid-cols-2 gap-4 neon-grid">
      {posts.map((post) => (
        <BlogPostCard
          slug={post.id}
          title={post.data.title}
          excerpt={post.data.description}
          date={post.data.pubDate}
          variant="cyberpunk"
          class="cyber-card"
        />
      ))}
    </div>
  </Section>

  <!-- Skills con efecto de tags brillantes -->
  <Section 
    title="ls -la /skills" 
    className="bg-black/70 border-y border-green-400/30"
  >
    <div class="w-full grid place-items-center">
      <div class="w-full gap-4 flex flex-wrap px-3 max-w-xl text-lg justify-center neon-tags">
        {KNOWN_TECH.map((x) => (
          <span class="px-3 py-1 border border-green-400 text-green-400 hover:bg-green-400/10 transition-all skill-tag">
            {x}
          </span>
        ))}
      </div>
    </div>
  </Section>

  <!-- About Me con efecto de cursor parpadeante -->
  <Section 
    title="nano about.txt" 
    className="bg-black/60 border-t border-green-400/20 terminal-section"
  >
    <div class="w-full grid place-items-center">
      <div class="max-w-4xl text-xl md:text-lg opacity-90 text-center justify-evenly terminal-text">
        <p>{ABOUT_ME}</p>
        <div class="mt-4 text-green-400/80 blink">_</div>
      </div>
    </div>
    <div class="scanline-overlay"></div>
  </Section>
</Layout>

<style is:global>
  /* Efecto Glitch */
  .glitch {
    position: relative;
    font-weight: bold;
  }
  .glitch::before, .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .glitch::before {
    left: 2px;
    text-shadow: -2px 0 #ff00ff;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim 5s infinite linear alternate-reverse;
  }
  .glitch::after {
    left: -2px;
    text-shadow: -2px 0 #00ffff;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim2 5s infinite linear alternate-reverse;
  }
  @keyframes glitch-anim {
    0% { clip: rect(31px, 9999px, 94px, 0); }
    20% { clip: rect(112px, 9999px, 76px, 0); }
    40% { clip: rect(75px, 9999px, 107px, 0); }
    60% { clip: rect(98px, 9999px, 109px, 0); }
    80% { clip: rect(95px, 9999px, 53px, 0); }
    100% { clip: rect(31px, 9999px, 14px, 0); }
  }
  @keyframes glitch-anim2 {
    0% { clip: rect(65px, 9999px, 119px, 0); }
    20% { clip: rect(66px, 9999px, 115px, 0); }
    40% { clip: rect(33px, 9999px, 17px, 0); }
    60% { clip: rect(147px, 9999px, 131px, 0); }
    80% { clip: rect(48px, 9999px, 28px, 0); }
    100% { clip: rect(62px, 9999px, 70px, 0); }
  }

  /* Efectos generales */
  .glow-effect {
    box-shadow: 0 0 15px rgba(0, 255, 100, 0.3);
  }
  .neon-grid {
    border: 1px dashed rgba(0, 255, 100, 0.3);
    padding: 1rem;
  }
  .neon-tags span {
    transition: all 0.3s ease;
  }
  .neon-tags span:hover {
    box-shadow: 0 0 10px rgba(0, 255, 100, 0.5);
    transform: translateY(-3px);
  }
  .terminal-text {
    font-family: 'Courier New', monospace;
    line-height: 1.8;
  }
  .blink {
    animation: blink 1s infinite;
  }
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }

  /* Efecto Scanline */
  .scanline-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgba(0, 255, 136, 0.05) 10%,
      transparent 20%
    );
    animation: scanline 8s linear infinite;
    pointer-events: none;
  }
  @keyframes scanline {
    0% { transform: translateY(-100%); }
    100% { transform: translateY(100%); }
  }

  /* Efecto Cyber Card */
  .cyber-card {
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  .cyber-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(0, 255, 136, 0.1),
      transparent
    );
    transition: all 0.6s ease;
  }
  .cyber-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 255, 136, 0.3);
  }
  .cyber-card:hover::before {
    left: 100%;
  }

  /* Efecto Skill Tags */
  .skill-tag {
    position: relative;
    overflow: hidden;
  }
  .skill-tag::after {
    content: "";
    position: absolute;
    top: -50%;
    left: -60%;
    width: 20%;
    height: 200%;
    background: rgba(255, 255, 255, 0.2);
    transform: rotate(30deg);
    transition: all 0.3s;
  }
  .skill-tag:hover::after {
    left: 140%;
  }
</style>